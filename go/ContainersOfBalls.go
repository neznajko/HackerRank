////////////////////////////////////////////////////////////////
// hackerrank.com/challenges/organizing-containers-of-balls
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
package main
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
import (
    "bufio"
    "fmt"
    "io"
    "os"
    "strconv"
    "strings"
)
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
func organizingContainers( cont [][] int32 ) string {
    n := len( cont )
    contsiz := make( [] int64, n )
    typesiz := make( [] int64, n )

    for i, row := range cont {
        for j, value := range row {
            contsiz[ i ] += int64( value )
            typesiz[ j ] += int64( value )
        }
    }
    contmap := make( map [ int64 ] int32 )
    typemap := make( map [ int64 ] int32 )

    for _, key := range contsiz {
        contmap[ key ]++
    }
    for _, key := range typesiz {
        typemap[ key ]++
    }
    for key, _ := range contmap {
        if contmap[ key ] != typemap[ key ]{
            return "Impossible"
        }
    }
    return "Possible"
}
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
func main() {///////////////////////////////////////////////////
    reader :=bufio.NewReaderSize(os.Stdin,16*1024*1024);stdout:=
    os.Stdout; defer stdout.Close();writer:=bufio.NewWriterSize(
    stdout, 16*1024*1024);qTemp,err := strconv.ParseInt(strings.
    TrimSpace(readLine(reader)),10,64);checkError(err);q:=int32(
    qTemp);for qItr:=0;qItr<int(q); qItr++{ nTemp,err :=strconv.
    ParseInt(  strings.TrimSpace(  readLine(  reader )), 10, 64)
    checkError( err ); n := int32(nTemp);var container[][]int32;
    for i:=0; i<int(n); i++ { containerRowTemp := strings.Split(
    strings.TrimRight ( readLine( reader ), " \t\r\n")," "); var 
    containerRow [     ] int32; for _, containerRowItem := range 
    containerRowTemp{ containerItemTemp, err :=strconv.ParseInt(
    containerRowItem, 10, 64); checkError(err); containerItem :=
    int32(containerItemTemp); containerRow =append(containerRow, 
    containerItem)}; if len( containerRow ) != int( n ){ panic (
    "Bad input" )}; container = append( container,containerRow)}
    result:=organizingContainers( container);fmt.Fprintf(writer, 
    "%s\n", result)};writer.Flush()}////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
func readLine( reader*bufio.Reader )string{ str, _, err:=reader.
ReadLine();if err==io.EOF{ return ""}; return strings.TrimRight(
string(str),"\r\n")}////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
func checkError(err error){if err!=nil{panic(err)}}/////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// Hackos:                                                  1569
// Max Score:                                              30.00
// Points:                                        1953.21 / 2200
// Rank:                                                   58092
// I've heart recently some people claiming  that  nothing exist
// and  everything is  an illusion  called Maya or something. In 
// this lecture we  are not going to talk about FLAT EARTH!, but 
// is  the  statement  "Truth doesn't exist!"  true or false? It 
// can't be true  cos it leads to self contradiction, so in this 
// Universe  there  is  at least one thing that exist: the truth
